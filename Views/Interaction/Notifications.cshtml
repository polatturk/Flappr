@model List<Flappr.Models.Notification>
@{
    ViewData["Title"] = "Notification - ";
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
}

<style>

    body.light-mode {
        color: #000 !important;
        background-color: #fff !important;
    }

    body.dark-mode {
        color: #fff !important;
        background-color: #000 !important;
    }

    .flap-item,
    .flap-detail,
    .card-glass,
    .flap-textarea,
    .flap-select {
        color: inherit !important;
        background: none !important;
    }

    body.light-mode .flap-item,
    body.light-mode .card-glass {
        background-color: #fff !important;
        border: 1px solid #ddd !important;
    }

    body.dark-mode .flap-item,
    body.dark-mode .card-glass {
        background-color: #000 !important;
        border: 1px solid #2f3336 !important;
    }

    .sidebar {
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 240px;
        background-color: rgba(0, 0, 0, 0.85);
        display: flex;
        flex-direction: column;
        padding: 20px 15px;
        box-shadow: 2px 0 8px rgba(0,0,0,0.3);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        z-index: 1000;
    }

        .sidebar .logo img {
            width: 150px;
            height: auto;
            user-select: none;
        }

        .sidebar .menu {
            list-style: none;
            padding: 0;
            margin: 0;
            flex-grow: 1;
        }
        
            .sidebar .menu li {
                margin-bottom: 15px;
            }

            .sidebar .menu a {
                color: #eee;
                text-decoration: none;
                font-size: 1rem;
                font-weight: 600;
                padding: 10px 14px;
                border-radius: 12px;
                display: block;
                transition: all 0.3s ease;
                border: 2px solid transparent;
            }

                .sidebar .menu a:hover {
                    background-color: #4da3ff;
                    color: #fff;
                    border-color: #4da3ff;
                }

        .sidebar .user-info {
            margin-top: auto;
            font-size: 0.9rem;
            color: #ccc;
            font-weight: 600;
        }

            .sidebar .user-info a {
                color: #ff6b6b;
                font-weight: 700;
                text-decoration: none;
                padding: 6px 14px;
                border-radius: 12px;
                border: 2px solid transparent;
                transition: all 0.3s ease;
                display: inline-block;
            }

                .sidebar .user-info a:hover {
                    background-color: #ff4c4c;
                    border-color: #ff4c4c;
                    color: #fff;
                }

    .main-content {
        margin-left: 240px; /* Sidebar genişliği + biraz boşluk */
        padding: 20px;
        min-height: 100vh;
        transition: margin 0.3s ease;
    }
:root {
  font-family: "Inter";
  font-size: 16px;
  --gradient: linear-gradient(to bottom, #2eadff, #3d83ff, #7e61ff);
  --color: #32a6ff;
}

.noti {
  display: flex;
  flex-direction: column;
  isolation: isolate;
  position: relative;
  width: 18rem;
  height: 8rem;
  background: #29292c;
  border-radius: 1rem;
  overflow: hidden;
  margin-bottom: 1rem;
}
.noti:before {
  position: absolute;
  content: "";
  inset: 0.0625rem;
  border-radius: 0.9375rem;
  background: #18181b;
  z-index: 2;
}
.noti:after {
  position: absolute;
  content: "";
  width: 0.25rem;
  inset: 0.65rem auto 0.65rem 0.5rem;
  border-radius: 0.125rem;
  background: var(--gradient);
  transition: transform 300ms ease;
  z-index: 4;
}
.noti:hover:after { transform: translateX(0.15rem) }

.notititle {
  color: var(--color);
  padding: 0.65rem 0.25rem 0.4rem 1.25rem;
  font-weight: 500;
  font-size: 1.1rem;
  transition: transform 300ms ease;
  z-index: 5;
}
.noti:hover .notititle { transform: translateX(0.15rem) }

.notibody {
  color: #99999d;
  padding: 0 1.25rem;
  transition: transform 300ms ease;
  z-index: 5;
}
.noti:hover .notibody { transform: translateX(0.25rem) }

.notiglow, .notiborderglow {
  position: absolute;
  width: 20rem;
  height: 20rem;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle closest-side at center, white, transparent);
  opacity: 0;
  transition: opacity 300ms ease;
}
.notiglow { z-index: 3; }
.notiborderglow { z-index: 1; }
.noti:hover .notiglow {opacity: 0.1}
.noti:hover .notiborderglow {opacity: 0.1}

</style>

<div class="overlay" onclick="toggleSidebar()"></div>

<button id="menu-toggle" class="hamburger p-4 text-2xl fixed top-4 left-4 z-50">
    <i class="fas fa-bars icon-open"></i>
    <i class="fas fa-times icon-close"></i>
</button>

<div id="sidebar" class="sidebar fixed top-0 left-0 h-full w-64 bg-gray-900 text-white transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-40">
    <a class="logo block p-4" asp-area="" asp-controller="Home" asp-action="Index">
        <img src="/Img/Flappr-logo.png" alt="Flappr Logo" />
    </a>

    <ul class="menu p-4 space-y-3">
        <li><a asp-controller="Home" asp-action="Index" class="flex items-center space-x-2"><i class="fas fa-home"></i><span>Anasayfa</span></a></li>
        <li><a asp-controller="Home" asp-action="Profile" class="flex items-center space-x-2"><i class="fas fa-user"></i><span>Profil</span></a></li>
        <li><a asp-controller="Home" asp-action="Search" class="flex items-center space-x-2"><i class="fas fa-search"></i><span>Ara</span></a></li>
        <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-compass"></i><span>Keşfet</span></a></li>
        <li class="relative">
            <a asp-controller="Interaction" asp-action="Notifications" class="flex items-center space-x-2">
                <i class="fas fa-bell"></i>
                <span>Bildirimler</span>
                @if (ViewBag.UnreadCount > 0)
                {
                    <span class="absolute top-0 right-0 bg-red-500 text-xs rounded-full w-5 h-5 flex items-center justify-center">
                        @ViewBag.UnreadCount
                    </span>
                }
            </a>
        </li>
        <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-envelope"></i><span>Mesajlar</span></a></li>
        <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-cog"></i><span>Ayarlar</span></a></li>
        <li>
            <button id="theme-toggle" class="flex items-center space-x-2 w-full text-left">
                <span id="theme-icon" class="w-5 text-center text-lg">🌙</span>
                <span>Tema Değiştir</span>
            </button>
        </li>
    </ul>

    <div class="user-info p-4 border-t border-gray-700">
        <a href="/Home/Cikis" class="flex items-center space-x-2"><i class="fas fa-sign-out-alt"></i><span>Çıkış Yap</span></a>
    </div>
</div>

<div class="main-content">
    <div class="max-w-3xl mx-auto">
        <div class="notification-header flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold dark:text-white">Bildirimler</h1>

            <form asp-action="DeleteNotifications" method="post">
                <button type="submit"
                        class="px-4 py-2 bg-red-600 text-white font-semibold rounded-lg shadow hover:bg-red-700 transition-all duration-200">
                    Tümünü Sil
                </button>
            </form>
        </div>

        <div class="notifications-container space-y-4">
            @if (Model.Any())
            {
                @foreach (var notification in Model)
                {
                    <div class="noti">
                        <div class="notiglow"></div>
                        <div class="notiborderglow"></div>
                        <div class="notititle font-semibold text-lg">@notification.Type</div>
                        <div class="notibody text-gray-300">@notification.Message</div>
                    </div>
                }
            }
            else
            {
                <p class="text-gray-500 text-lg">Henüz bildirim yok 🎉</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll(".noti").forEach(el => {
            const glowEl = el.querySelector(".notiglow")
            const borderEl = el.querySelector(".notiborderglow")
            let isHovering = false

            el.addEventListener("mousemove", (event) => {
                const rect = el.getBoundingClientRect()
                const localX = (event.clientX - rect.left) / rect.width
                const localY = (event.clientY - rect.top) / rect.height

                glowEl.style.left = localX * 100 + "%"
                glowEl.style.top = localY * 100 + "%"

                borderEl.style.left = localX * 100 + "%"
                borderEl.style.top = localY * 100 + "%"

                if (isHovering) {
                    glowEl.style.transition = "inset 50ms linear, opacity 300ms ease";
                    borderEl.style.transition = "inset 50ms linear, opacity 300ms ease"
                } else {
                    glowEl.style.transition = "opacity 300ms ease"
                    borderEl.style.transition = "opacity 300ms ease"
                }

                isHovering = false
            })

            el.addEventListener("mouseout", (event) => {
                isHovering = true;
            })
        })

        const menuToggle = document.getElementById('menu-toggle');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('overlay');

        function toggleSidebar() {
            sidebar.classList.toggle('open');
            menuToggle.classList.toggle('active');

            if (sidebar.classList.contains('open')) {
                overlay.style.display = 'block';
                setTimeout(() => {
                    overlay.classList.add('visible');
                }, 10);
            } else {
                overlay.classList.remove('visible');
                setTimeout(() => {
                    if (!sidebar.classList.contains('open')) {
                        overlay.style.display = 'none';
                    }
                }, 300);
            }
        }

        if (menuToggle) {
            menuToggle.addEventListener('click', toggleSidebar);
        }
        if (overlay) {
            overlay.addEventListener('click', toggleSidebar);
        }

        window.addEventListener('resize', function () {
            if (window.innerWidth >= 768) {
                if (sidebar.classList.contains('open')) {
                    sidebar.classList.remove('open');
                    menuToggle.classList.remove('active');
                    overlay.classList.remove('visible');
                    overlay.style.display = 'none';
                }
            }
        });

    </script>
}
