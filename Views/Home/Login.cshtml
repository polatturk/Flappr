<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@model User

@{
    ViewData["Title"] = "Login - ";
}

<style>
    body {
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        background-attachment: fixed;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .card {
        width: min(400px, 92vw);
        background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
        border-radius: 14px;
        padding: 28px 20px;
        text-align: center;
        box-shadow: 0 8px 30px rgba(2,6,23,0.6);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
        color: #fff;
        margin: 20px auto;
    }

        .card input {
            width: 100%;
            padding: 10px 15px;
            background: rgba(255, 255, 255, 0.1);
            border: none;
            border-radius: 8px;
            color: inherit !important;
            font-size: 1rem;
            transition: background 0.3s ease;
            margin-bottom: 20px; 
        }

            .card input::placeholder {
                color: inherit !important;
            }

            .card input:focus {
                background: rgba(255, 255, 255, 0.15) !important;
                outline: none;
                box-shadow: 0 0 8px 2px rgba(77, 163, 255, 0.5); 
                color: inherit !important;
                transition: background 0.3s ease, box-shadow 0.3s ease;
            }

        .card label {
            display: block;
            text-align: left;
            margin-bottom: 5px;
            font-weight: 500;
        }

    .btn-login {
        background-color: #4da3ff;
        border: none;
        transition: background-color 0.3s ease;
        width: 100%;
        padding: 10px 0;
        border-radius: 10px;
        font-weight: 600;
        color: #fff;
    }

        .btn-login:hover {
            background-color: #1e80e0;
        }

    .toggle-password {
        position: absolute;
        right: 15px;
        top: 55%; 
        transform: translateY(-50%);
        cursor: pointer;
        color: inherit !important;
        font-size: 1.2rem;
    }

    .social-btn {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 10px 18px;
        border-radius: 30px;
        font-size: 0.95rem;
        font-weight: 500;
        text-decoration: none;
        color: #fff;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .social-btn:hover {
            transform: scale(1.05);
            text-decoration: none;
        }

    .google {
        background-color: #db4437;
    }

        .google:hover {
            background-color: #c1351d;
        }

    .auth-btn {
        background-color: rgba(255, 255, 255, 0.1);
        color: #a7cdf0;
        border: 1px solid #4da3ff;
        padding: 10px 20px;
        font-weight: 500;
        font-size: 16px;
        border-radius: 30px;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .auth-btn:hover {
            background-color: #4da3ff;
            color: #fff;
            border-color: #4da3ff;
            text-decoration: none;
        }

</style>

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card">
        <h3 class="text-center mb-4">Giriş Yap</h3>

        @if (TempData["SuccessMessageRegister"] != null)
        {
            <div id="formMessage" class="alert alert-success text-center">
                @TempData["SuccessMessageRegister"]
            </div>
        }
        @if (TempData["PwResetSuccessMessage"] != null)
        {
            <div id="formMessage" class="alert alert-success text-center">
                @TempData["PwResetSuccessMessage"]
            </div>
        }
        @if (TempData["AuthError"] != null)
        {
            <div id="formMessage" class="alert alert-danger text-center">
                @TempData["AuthError"]
            </div>
        }
        <form action="/Login" method="post" autocomplete="off">
            <div class="text-left">
                <label for="email">E-Posta Adresiniz</label>
                <input type="email" id="email" name="Mail" placeholder="örnek@gmail.com" required autocomplete="off" />
            </div>

            <div class="position-relative text-left">
                <label for="password">Şifre</label>
                <input type="password" id="password" name="Password" placeholder="Şifrenizi girin" required autocomplete="current-password" />
                <i class="fa-solid fa-eye toggle-password" onclick="togglePassword()"></i>
            </div>

            <input type="hidden" id="g-recaptcha-response" name="g-recaptcha-response" />

            <button type="submit" class="btn-login mt-3">Giriş Yap</button>
        </form>

        <div class="social-login mt-4">
            <div class="social-login-title text-center mb-3">veya Google ile giriş yap</div>
            <a href="/Home/GoogleLogin" class="social-btn google">
                <i class="fab fa-google"></i> Google
            </a>
        </div>
        <hr />
        <div class="auth-links-button-group  d-flex justify-content-center gap-3 flex-wrap">
            <a href="/Sifre-unuttum" class="auth-btn"><i class="fa-solid fa-unlock-keyhole"></i> Şifremi Unuttum</a>
            <a href="/home/register" class="auth-btn"><i class="fa-solid fa-user-plus"></i> Kayıt Ol</a>
        </div>
    </div>
</div>

<script>
    function togglePassword() {
        const passwordInput = document.getElementById("password");
        const toggleIcon = document.querySelector(".toggle-password");

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            toggleIcon.classList.remove("fa-eye");
            toggleIcon.classList.add("fa-eye-slash");
        } else {
            passwordInput.type = "password";
            toggleIcon.classList.remove("fa-eye-slash");
            toggleIcon.classList.add("fa-eye");
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        var msg = document.getElementById("formMessage");
        if (msg) {
            setTimeout(function () {
                msg.style.transition = "opacity 0.5s ease";
                msg.style.opacity = "0";
                setTimeout(function () {
                    msg.remove();
                }, 500);
            }, 2000);
        }
    });
</script>

<script src="https://www.google.com/recaptcha/api.js?render=@Configuration["Recaptcha:SiteKey"]"></script>
<script>
    grecaptcha.ready(function () {
        grecaptcha.execute('@Configuration["Recaptcha:SiteKey"]', { action: 'login' })
            .then(function (token) {
                document.getElementById('g-recaptcha-response').value = token;
            });
    });
</script>
