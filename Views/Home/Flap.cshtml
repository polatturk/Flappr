@using System.Globalization
@using Flappr.Helpers

@model Flappr.Dto.FlapRequest

@{
    ViewData["Title"] = "FlapDetail - ";
}
@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
}

<body class="bg-gray-100">

    <div class="overlay" onclick="toggleSidebar()"></div>

    <button id="menu-toggle" class="hamburger p-4 text-2xl fixed top-4 left-4 z-50">
        <i class="fas fa-bars icon-open"></i>
        <i class="fas fa-times icon-close"></i>
    </button>

    <div id="sidebar" class="sidebar fixed top-0 left-0 h-full w-64 bg-gray-900 text-white transform -translate-x-full md:translate-x-0 transition-transform duration-300 ease-in-out z-40">
        <a class="logo block p-4" asp-area="" asp-controller="Home" asp-action="Index">
            <img src="/Img/Flappr-logo.png" alt="Flappr Logo" />
        </a>

        <ul class="menu p-4 space-y-3">
            <li><a asp-controller="Home" asp-action="Index" class="flex items-center space-x-2"><i class="fas fa-home"></i><span>Anasayfa</span></a></li>
            <li><a asp-controller="Home" asp-action="Profile" class="flex items-center space-x-2"><i class="fas fa-user"></i><span>Profil</span></a></li>
            <li><a asp-controller="Home" asp-action="Search" class="flex items-center space-x-2"><i class="fas fa-search"></i><span>Ara</span></a></li>
            <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-compass"></i><span>Keşfet</span></a></li>
            <li class="relative">
                <a asp-controller="Interaction" asp-action="Notifications" class="flex items-center space-x-2">
                    <i class="fas fa-bell"></i>
                    <span>Bildirimler</span>
                    @if (ViewBag.UnreadCount > 0)
                    {
                        <span class="absolute top-0 right-0 bg-red-500 text-xs rounded-full w-5 h-5 flex items-center justify-center">
                            @ViewBag.UnreadCount
                        </span>
                    }
                </a>
            </li>
            <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-envelope"></i><span>Mesajlar</span></a></li>
            <li><a asp-controller="Interaction" asp-action="ServiceUnavailable" class="flex items-center space-x-2"><i class="fas fa-cog"></i><span>Ayarlar</span></a></li>
            <li>
                <button id="theme-toggle" class="flex items-center space-x-2 w-full text-left">
                    <span id="theme-icon" class="w-5 text-center text-lg">🌙</span>
                    <span>Tema Değiştir</span>
                </button>
            </li>
        </ul>

        <div class="user-info p-4 border-t border-gray-700">
            <a href="/Home/Cikis" class="flex items-center space-x-2"><i class="fas fa-sign-out-alt"></i><span>Çıkış Yap</span></a>
        </div>
    </div>

    <div class="relative max-w-lg mx-auto mt-10 space-y-4">
        <!-- Flap Detay -->
        <div class="flap-item">
            <div class="flex items-start">
                <a href="/profile/@Model.UserNickname">
                    <img class="flap-avatar" src="@(Model.UserImgUrl)" alt="Profil">
                </a>
                <div class="ml-4 w-full">
                    <div class="flex items-center space-x-2">
                        <a href="/profile/@Model.UserNickname" class="font-bold text-sm">
                            @Model.UserUsername
                        </a>
                        <span class="text-gray-500 text-sm">@("@" + Model.UserNickname)</span>
                        <span class="text-gray-500 text-sm">·</span>
                        <span class="text-gray-500 text-sm">@TimeHelper.FormatTime(Model.Flap.CreatedDate)</span>
                    </div>

                    <p class="mt-1 text-sm flap-detail">
                        @Model.Flap.Detail
                    </p>

                    <div class="flex items-center mt-4 space-x-6 text-gray-500">
                        <a href="/Flap/@Model.Flap.Id" class="flex items-center space-x-1 px-3 py-1 rounded-full text-sm font-medium bg-gray-200 text-gray-800 hover:bg-gray-300 transition duration-200">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M8 10h.01M12 10h.01M16 10h.01M21 12c0 4.418-4.03 8-9 8a9.77 9.77 0 01-4.3-.93L3 20l1.14-3.42A7.96 7.96 0 013 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                            </svg>
                            <span>@Model.Comments.Count</span>
                        </a>

                        <form method="post" action="/Interaction/Likes">
                            <input type="hidden" name="flapId" value="@Model.Flap.Id" />
                            <input type="hidden" name="returnUrl" value="@Url.Action("Flap", "Home", new { id = Model.Flap.Id })" />
                            <button type="submit" class="flex items-center space-x-1 px-3 py-1 rounded-full text-sm font-medium
                                    @(Model.IsLikedByCurrentUser ? "bg-gray-200 text-gray-800 hover:bg-gray-300" : "bg-gray-200 text-gray-800 hover:bg-gray-300")">
                                <i class="bi @(Model.IsLikedByCurrentUser ? "bi-suit-heart-fill text-danger" : "bi-suit-heart-fill text-white")"></i>
                                <span>@Model.LikeCount</span>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="flap-item">
            <h3 class="font-semibold text-lg mb-2">Yorum Yap</h3>
            <form action="/AddYorum" method="post" class="flex flex-col gap-2" onsubmit="return checkWordLimit()">
                <textarea id="commentTextarea" name="Summary" rows="4"
                          class="flap-textarea" placeholder="Yorumunuzu buraya yazın... (max 200 karakter)"></textarea>
                <div class="flex justify-between items-center text-sm">
                    <span id="charCount">0 / 200</span>
                </div>
                <input type="hidden" name="FlapId" value="@Model.Flap.Id" />
                <button type="submit" class="flap-btn self-end">Gönder</button>

                @if (TempData["CommentMessage"] != null)
                {
                    <div class="alert-message alert alert-danger text-center" style="margin-top:10px;">
                        @TempData["CommentMessage"]
                    </div>
                }
            </form>
        </div>

        @if (Model.Comments != null && Model.Comments.Any())
        {
            @foreach (var item in Model.Comments)
            {
                <div class="flap-item">
                    <div class="flex items-start">
                        <a href="/profile/@item.Nickname">
                            <img class="flap-avatar" src="@(item.ImgUrl ?? "/images/default-profile.png")" alt="Yorum Yapan Profil">
                        </a>
                        <div class="ml-4 w-full">
                            <div class="flex items-center">
                                <a href="/profile/@item.Nickname" class="font-bold text-sm">@item.Username</a>
                                <span class="text-gray-500 text-sm ml-2">@("@" + item.Nickname)</span>
                                <span class="text-gray-500 text-sm ml-2">•</span>
                                <span class="text-gray-500 text-sm ml-2">@TimeHelper.FormatTime(item.CreatedTime)</span>
                            </div>
                            <p class="mt-2 comment-text">@item.Summary</p>
                        </div>
                        @if (ViewBag.id == item.UserId || ViewBag.id == Model.Flap.UserId)
                        {
                            <a href="/YorumSil/@item.Id?FlapId=@Model.Flap.Id"
                               onclick="return confirm('Emin misin?')"
                               class="btn btn-danger ml-2">
                                Sil
                            </a>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <style>

        body.light-mode {
            color: #000 !important;
            background-color: #fff !important;
        }

        body.dark-mode {
            color: #fff !important;
            background-color: #000 !important;
        }

        body.light-mode #charCount {
            color: #000 !important;
        }

        body.dark-mode #charCount {
            color: #fff !important;
        }

        .flap-item,
        .flap-detail,
        .card-glass,
        .flap-textarea,
        .flap-select {
            color: inherit !important;
            background: none !important;
        }

        body.light-mode .flap-item,
        body.light-mode .card-glass {
            background-color: #fff !important;
            border: 1px solid #ddd !important;
        }

        body.dark-mode .flap-item,
        body.dark-mode .card-glass {
            background-color: #000 !important;
            border: 1px solid #2f3336 !important;
        }

        /* Sidebar */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 220px;
            background-color: rgba(0, 0, 0, 0.85);
            display: flex;
            flex-direction: column;
            padding: 20px 15px;
            box-shadow: 2px 0 8px rgba(0,0,0,0.3);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            z-index: 1000;
        }

            .sidebar .logo img {
                width: 150px;
                height: auto;
                user-select: none;
            }

            .sidebar .menu {
                list-style: none;
                padding: 0;
                margin: 0;
                flex-grow: 1;
            }

                .sidebar .menu li {
                    margin-bottom: 15px;
                }

                .sidebar .menu a {
                    color: #eee;
                    text-decoration: none;
                    font-size: 1rem;
                    font-weight: 600;
                    padding: 10px 14px;
                    border-radius: 12px;
                    display: block;
                    transition: all 0.3s ease;
                    border: 2px solid transparent;
                }

                    .sidebar .menu a:hover {
                        background-color: #4da3ff;
                        color: #fff;
                        border-color: #4da3ff;
                    }

            .sidebar .user-info {
                margin-top: auto;
                font-size: 0.9rem;
                color: #ccc;
                font-weight: 600;
            }

                .sidebar .user-info a {
                    color: #ff6b6b;
                    font-weight: 700;
                    text-decoration: none;
                    padding: 6px 14px;
                    border-radius: 12px;
                    border: 2px solid transparent;
                    transition: all 0.3s ease;
                    display: inline-block;
                }

                    .sidebar .user-info a:hover {
                        background-color: #ff4c4c;
                        border-color: #ff4c4c;
                        color: #fff;
                    }

        .flap-item {
            background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(255,255,255,0.01));
            border-radius: 16px;
            padding: 25px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.4);
            backdrop-filter: blur(6px);
            transition: box-shadow 0.3s ease;
            margin-bottom: 20px;
            color: #fff;
        }

            .flap-item:hover {
                box-shadow: 0 10px 40px rgba(0,0,0,0.5);
            }

        .flap-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            margin-right: 12px;
            object-fit: cover;
        }

        .flap-detail {
            white-space: normal; 
            word-break: break-word; 
            overflow-wrap: break-word; 
            margin-top: 0.25rem;
        }
        .flap-textarea {
            width: 100%;
            border: none;
            resize: none;
            font-size: 15px;
            padding: 12px;
            border-radius: 12px;
            background: rgba(255,255,255,0.05);
            color: inherit !important;
            transition: background 0.2s ease, box-shadow 0.3s ease;
        }

            .flap-textarea:focus {
                background: rgba(255,255,255,0.1);
                outline: none;
                box-shadow: 0 0 8px 2px rgba(77, 163, 255, 0.5);
            }

        .flap-btn {
            background: linear-gradient(135deg, #4da3ff, #1e80e0);
            border: none;
            padding: 8px 18px;
            border-radius: 25px;
            color: #fff;
            font-weight: 600;
            transition: transform 0.2s ease, background 0.3s ease;
        }

            .flap-btn:hover {
                transform: translateY(-2px);
                background: linear-gradient(135deg, #1e80e0, #4da3ff);
            }

        .comment-text {
            word-wrap: break-word;
            word-break: break-word;
            white-space: pre-wrap;
        }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const commentInput = document.getElementById("commentTextarea");
            const charCount = document.getElementById("charCount");

            if (commentInput && charCount) {
                function updateCount() {
                    let length = commentInput.value.trim().length;
                    charCount.textContent = `${length} / 200`;

                    if (length > 200) {
                        charCount.style.setProperty("color", "red", "important");
                    } else {
                        charCount.style.setProperty("color", "", ""); 
                    }
                }

                updateCount();
                commentInput.addEventListener("input", updateCount);
            }
        });

        const menuToggle = document.getElementById('menu-toggle');
        const sidebar = document.getElementById('sidebar');
        const overlay = document.getElementById('overlay');

        function toggleSidebar() {
            sidebar.classList.toggle('open');
            menuToggle.classList.toggle('active');

            if (sidebar.classList.contains('open')) {
                overlay.style.display = 'block';
                setTimeout(() => {
                    overlay.classList.add('visible');
                }, 10);
            } else {
                overlay.classList.remove('visible');
                setTimeout(() => {
                    if (!sidebar.classList.contains('open')) {
                        overlay.style.display = 'none';
                    }
                }, 300);
            }
        }

        if (menuToggle) {
            menuToggle.addEventListener('click', toggleSidebar);
        }
        if (overlay) {
            overlay.addEventListener('click', toggleSidebar);
        }

        window.addEventListener('resize', function () {
            if (window.innerWidth >= 768) {
                if (sidebar.classList.contains('open')) {
                    sidebar.classList.remove('open');
                    menuToggle.classList.remove('active'); 
                    overlay.classList.remove('visible');
                    overlay.style.display = 'none';
                }
            }
        });
    </script>

</body>
